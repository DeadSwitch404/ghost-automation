#+TITLE: DeadSwitch User Management Role
#+AUTHOR: DeadSwitch | The Silent Architect
#+OPTIONS: toc:t num:t \n:nil

* Overview
This role manages user and group creation, as well as SSH key deployment, on
Debian-based systems. It ensures that users exist, that their groups are
created and assigned correctly, and that their SSH keys are installed.
Privilege configuration is delegated to the =ds-sudo= role.

* Features
- Creates users defined in =user_data=.
- Ensures groups exist:
  - Groups explicitly listed in =user_data.groups=.
  - Groups defined in =group_data=.
- Adds users to groups (using =append: yes= to preserve existing memberships).
- Deploys SSH keys per user.
- Sets the user's full name (GECOS field) if provided.
- Fully compatible with =ds-sudo= for privilege management.

* Role Variables
All variables are defined in =defaults/main.yml=.

** =user_data=
Dictionary of users and their attributes:

#+begin_src yaml
user_data:
  user1:
    ssh_key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCjvz101..."
    full_name: "DeadSwitch"
    password: "*"
    groups:
      - ansible
    sudo:               # Ignored by ds-users; consumed by ds-sudo
      type: nopasswd
      commands: all
#+end_src

- =ssh_key= → optional; if defined, will be deployed to =~/.ssh/authorized_keys=.
- =full_name= → optional; sets the user's GECOS/comment field.
- =prompt= → optional; sets the BASH prompt of the user (=.bashrc=).
- =password= → optional; sets the password only at user creation; defaults to "*".
- =groups= → optional; list of groups to add the user to.
- =sudo= → ignored by =ds-users=; passed through for use by =ds-sudo=.

For real password hashes, store them in an Ansible Vault in the =vault_data= hash.
(Hash the passwords with ~openssl passwd -6~)

** =group_data=
Dictionary of groups. Groups may also be defined here, typically with sudo
attributes for =ds-sudo=.

#+begin_src yaml
group_data:
  ansible:
    sudo:             # Used only by ds-sudo
      type: nopasswd
      commands: all
#+end_src

* Examples

** Minimal user creation
#+begin_src yaml
user_data:
  alice:
    groups:
      - ansible
#+end_src

This will create the =ansible= group if missing, then create user =alice= and
add them to that group.

** Full example with SSH key and sudo (sudo handled by ds-sudo)
#+begin_src yaml
user_data:
  deadswitch:
    ssh_key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCjvz101..."
    full_name: "DeadSwitch"
    password: "*"
    groups:
      - ansible
    sudo:
      type: nopasswd
      commands: all
#+end_src

* Safety
- Existing users and group memberships are preserved; =append: yes= is used.
- Groups are auto-created if referenced in either =user_data= or =group_data=.
- SSH keys are only deployed if defined.
- Password is set only at user creation. Default: "*" (account locked, SSH-only authentication)
- Sudo privileges are not modified by this role; use =ds-sudo=.

* License
MIT. Fear the silence. Fear the switch.
